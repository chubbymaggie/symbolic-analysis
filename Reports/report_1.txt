                              native_run_time         jit_time  lli_time        klee_concrete_run_w/o_checks    klee_concrete_run_w_checks
./aha/Makefile                2.1037                  2.2307    3346.9542       106m27.300s
./lambda-0.1.3/Makefile       5.5102                  7.1659    5116.4352       268m48.679s
./ALAC/encode/Makefile        0.0260                  0.2430    43.1754      

./Stanford/IntMM              0.0010                0.0150      2.1117          0m4.019s                          6m32.979s
./Stanford/RealMM             0.0020                0.0140      1.9787          0m5.406s                          6m27.876s
./Stanford/Quicksort          0.0410                0.0510      24.3813         0m39.883s                         79m54.503s
./Stanford/Queens             0.0370                0.0520      20.0360         0m38.840s                         81m59.687s
./Stanford/Bubblesort         0.0460                0.0600      35.7216         0m59.707s                         116m32.329s
./Stanford/Perm               0.0220                0.0380      21.2618         0m47.751s                         127m34.294s
./Stanford/Towers             0.0150                0.0040      29.2296         0m50.715s
./Stanford/Puzzle             0.1500                0.1860      188.5333        5m39.421s

Not interesting:
./Shootout/nestedloop         0.1600                0.1645      3m34.240s        3m58.411s                         4m5.165s
./Shootout/ackermann          0.0050                0.0140      5.6351          0m5.833s                          0m6.500s

*In both the klee_concrete_run_w/o_checks & klee_concrete_run_w_checks runs made sure that the symbolic runs should not kick in. 

Why the difference between klee_concrete_run_w/o_checks & klee_concrete_run_w_checks is not seen in some cases?
Whats makes klee_concrete_run_w/o_checks dominate lli time?
